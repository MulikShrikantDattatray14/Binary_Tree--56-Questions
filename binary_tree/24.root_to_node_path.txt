//root to node path

class Node {
    constructor(data) {
        this.data = data;
        this.left = null;
        this.right = null;
    }
}


// inorder traversal
function getPath(root, arr, x) {
    if (root === null) {
        return false;
    }
    // if the element doesnt match x , insert it inside the arr, we can later remove it .
    // however , if the element does match x , insert it inside the arr and dont remove it .
    arr.push(root.data);
    // first insert it , later we can remove
    if (root.data === x) {
        return true;
    }

    if (getPath(root.left, arr, x) || getPath(root.right, arr, x)) {
        return true;
    }

    arr.pop(); //backtrack
    return false;
}

const root = new Node(1);
root.left = new Node(2);
root.left.left = new Node(4);
root.left.right = new Node(5);
root.left.right.left = new Node(6);
root.left.right.right = new Node(7);
root.right = new Node(3);

const arr = [];
const res = getPath(root, arr, 7);
console.log("The path is", arr.join(" "));