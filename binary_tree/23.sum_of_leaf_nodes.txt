// Define a simple binary tree node
class TreeNode {
    constructor(value) {
        this.value = value;
        this.left = null;
        this.right = null;
    }
}

// Function to calculate the sum of leaf nodes
function sumLeafNodes(root) {
    if (root == null) {
        return 0;
    }

    if (root.left == null && root.right == null) {
        // Leaf node
        return root.value;
    }

    // Recursively calculate the sum of leaf nodes in the left and right subtrees
    return sumLeafNodes(root.left) + sumLeafNodes(root.right);
}

// Example usage:

// Create a binary tree
const root = new TreeNode(10);
root.left = new TreeNode(5);
root.right = new TreeNode(15);
root.left.left = new TreeNode(3);
root.left.right = new TreeNode(7);
root.right.right = new TreeNode(18);

// Calculate the sum of leaf nodes
const leafSum = sumLeafNodes(root);

console.log("Sum of leaf nodes:", leafSum);

  